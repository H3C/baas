---
apiVersion: v1
kind: Service
metadata:
  name: zoo
  labels:
    app: zookeeper
  namespace: $networkName
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zookeeper
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zk-cm
  namespace: $networkName
data:
  tick: "2000"
  init: "5"
  sync: "2"
  client.cnxns: "60"
  snap.retain: "3"
  purge.interval: "1"
---
#apiVersion: policy/v1beta1
#kind: PodDisruptionBudget
#metadata:
#  name: zk-pdb
#spec:
#  selector:
#    matchLabels:
#      app: zookeeper
#  minAvailable: 2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zoo
  namespace: $networkName
spec:
  serviceName: zoo
  replicas: 3
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      #affinity:
      #  podAntiAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #      - labelSelector:
      #          matchExpressions:
      #            - key: "app"
      #              operator: In
      #              values: 
      #              - zookeeper
      #        topologyKey: "kubernetes.io/hostname"
      containers:
      - name: zookeeper
        imagePullPolicy: IfNotPresent
        image: hyperledger/fabric-zookeeper:0.4.15
        resources:
          requests:
            #memory: "2Gi"
            cpu: "500m"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name : ZK_REPLICAS
          value: "3"
        - name : ZK_TICK_TIME
          valueFrom:
            configMapKeyRef:
                name: zk-cm
                key: tick
        - name : ZK_INIT_LIMIT
          valueFrom:
            configMapKeyRef:
                name: zk-cm
                key: init
        - name : ZK_SYNC_LIMIT
          valueFrom:
            configMapKeyRef:
                name: zk-cm
                key: tick
        - name : ZK_MAX_CLIENT_CNXNS
          valueFrom:
            configMapKeyRef:
                name: zk-cm
                key: client.cnxns
        - name: ZK_SNAP_RETAIN_COUNT
          valueFrom:
            configMapKeyRef:
                name: zk-cm
                key: snap.retain
        - name: ZK_PURGE_INTERVAL
          valueFrom:
            configMapKeyRef:
                name: zk-cm
                key: purge.interval
        - name: ZK_CLIENT_PORT
          value: "2181"
        - name: ZK_SERVER_PORT
          value: "2888"
        - name: ZK_ELECTION_PORT
          value: "3888"
        command:
        - sh
        - -c
        - zkGenConfig.sh && zkServer.sh start-foreground
  #      readinessProbe:
  #        exec:
  #          command:
  #          - "zkOk.sh"
  #        initialDelaySeconds: 10
  #        timeoutSeconds: 5
  #      livenessProbe:
  #        exec:
  #          command:
  #          - "zkOk.sh"
  #        initialDelaySeconds: 10
  #        timeoutSeconds: 5
        volumeMounts:
          - name: datadir
            mountPath: /var/lib/zookeeper
          - mountPath: /etc/localtime
            name: host-time
      volumes:
       - name: host-time
         hostPath:
            path: /etc/localtime
  #    securityContext:
  #      runAsUser: 1000
  #      fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
 
