apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hyperledger-peer1-org2
  labels:
    app: hyperledger
    role: peer
    peer-id: "1"
    org: "2"
spec:
  replicas: 1
  template:
    metadata:
      name: peer-pod2
      labels:
        app: hyperledger
        role: peer
        peer-id: "1"
        org: "2"
    spec:
      restartPolicy: Always
      containers:
        - name: peer1-org2-container
          imagePullPolicy: IfNotPresent
          image: hyperledger/fabric-peer:x86_64-1.0.0
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          volumeMounts:
            - mountPath: /etc/hyperledger/fabric/msp
              name: fabric-vol-msp
            - mountPath: /etc/hyperledger/fabric/tls
              name: fabric-vol-tls
            - mountPath: /host/var/run/docker.sock
              name: docker-sock
          env:
            - name: CORE_VM_ENDPOINT
              value: unix:///host/var/run/docker.sock
            - name: CORE_PEER_ID
              value: "peer1-org2"
            - name: CORE_PEER_ADDRESS
              value: "peer1-org2:7051"
            - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
              value: "peer1-org2:7051"
            - name: CORE_PEER_GOSSIP_BOOTSTRAP
              value: "peer0-org2:7051"
            - name: CORE_PEER_LOCALMSPID
              value: "Org2MSP"
            - name: CHAINCODE_LISTEN_ADDRESS
              value: "0.0.0.0:8000"
            - name: CORE_VM_HOSTCONFIG_DNS
              value: $NGINX_PROXY_DNS
            - name: CORE_PEER_GOSSIP_ORGLEADER
              value: "false"
            - name: CORE_LOGGING_LEVEL
              value: "DEBUG"
            - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
              value: "bridge"
            - name: CORE_PEER_GOSSIP_USELEADERELECTION
              value: "true"
            - name: CORE_PEER_GOSSIP_ORGLEADER
              value: "false"
            - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
              value: "true"
            - name: CORE_PEER_PROFILE_ENABLED
              value: "true"
            - name: CORE_PEER_TLS_ENABLED
              value: "false"
            - name: CORE_PEER_TLS_CERT_FILE
              value: "/etc/hyperledger/fabric/tls/server.crt"
            - name: CORE_PEER_TLS_KEY_FILE
              value: "/etc/hyperledger/fabric/tls/server.key"
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: "/etc/hyperledger/fabric/tls/ca.crt"
          ports:
            #- containerPort: 7050
            - containerPort: 7051
            - containerPort: 7052
            - containerPort: 7053
            - containerPort: 8000
            # - containerPort: 7055
            # - containerPort: 7056
            # - containerPort: 7057
            # - containerPort: 7058
            # - containerPort: 7059
          command:
            #- /bin/bash
            #- sh
            #- -c
            #- "sleep 10; peer node start"
            - peer
            - node
            - start
            - --peer-defaultchain=false
          #command:
            #- cat
            #- "/etc/hyperledger/fabric/tls/server.crt"
      volumes:
        - name: fabric-vol-msp
          hostPath:
            path: /data/driving-files/fabric-peer/peer1-org2/msp
        - name: fabric-vol-tls
          hostPath:
            path: /data/driving-files/fabric-peer/peer1-org2/tls
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
---
apiVersion: v1
kind: Service
metadata:
  name: peer1-org2
  labels:
    app: hyperledger-peer
spec:
  type: ClusterIP
  ports:
    #- name: "7050"
    #  targetPort: 7050
    #  port: 7050
    - name: "7051"
      targetPort: 7051
      port: 7051
    - name: "7052"
      targetPort: 7052
      port: 7052
    - name: "7053"
      targetPort: 7053
      port: 7053
    - name: "chaincode-listen-address"
      targetPort: 8000
      port: 8000
  selector:
    app: hyperledger
    role: peer
    peer-id: "1"
    org: "2"
