---
- name: Figuring out the server architecture
  shell: uname -m
  register: rawarch

- name: Setup hyperledger directory
  file:
    path: "{{ fabricpath }}/build"
    state: absent
    force: yes
    mode: 0775

- name: Extract hyperledger fabric code
  git:
    repo: "{{ GIT_URL | default('http://gerrit.hyperledger.org/r/fabric') }}"
    dest: "{{ fabricpath }}"
    force: yes
    refspec: "{{ GERRIT_REFSPEC | default('') }}"
    version: "{{ (GERRIT_REFSPEC == '') | ternary('HEAD','FETCH_HEAD') }}"
    depth: 1
  tags: "extractcode"

- name: Figure out the build tag
  shell: "git rev-parse --short HEAD"
  args:
    chdir: "{{ fabricpath }}"
  register: rawtag

- name: Add docker targets if absent
  set_fact:
    target: "{{ target }},docker"
  when: fabric.baseimage_tag|length == 0 and 'docker' not in target

- name: Make targets
  shell: "make {{ item }} >> {{ gopath }}/build.log"
  args:
    chdir: "{{ fabricpath }}"
  with_items: "{{ target.split(',') }}"
  environment:
    GOROOT: "{{ goroot }}"
    GOPATH: "{{ gopath }}"
    PATH: "{{ ansible_env.PATH}}:{{ goroot }}/bin"
  when: target | length > 0
  tags: "makeimages"

- name: Get base version
  shell: grep '^BASE_VERSION' Makefile | cut -d '=' -f 2 | xargs
  args:
    chdir: "{{ fabricpath }}"
  register: baseversion

- name: Check if it is a release
  shell: grep '^IS_RELEASE' Makefile | cut -d '=' -f 2 | xargs
  args:
    chdir: "{{ fabricpath }}"
  register: isrelease

- name: Get the project version
  set_fact:
    project_version: >-
      {{ (isrelease.stdout|lower == 'true') | ternary(baseversion.stdout,
      baseversion.stdout+'-snapshot-'+rawtag.stdout) | trim }}

- name: Set project version and container tags
  set_fact:
    baseimage_tag: "{{ rawarch.stdout }}-{{ project_version }}"
    helper_tag: "{{ fabric.helper_tag }}"
