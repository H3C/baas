---
- name: Setup few variables
  set_fact:
    public_ip: "{{ groups['allnodes'][0] }}"
    private_ip: "{{ hostvars[groups['allnodes'][0]].private_ip }}"
    service_path: "/lib/systemd/system/"
    fabricroot: "/opt/fabric"

- name: Install nfs-common
  apt:
    name: nfs-common

- name: Ensure binary directory exists
  file:
    path: "{{ item }}"
    state: directory
    mode: 0775
  with_items:
    - "{{ fabricroot }}"
    - "{{ fabricroot }}/bin"
    - "/etc/kubernetes"
    - "~/.kube"

- name: List all k8s service on the node
  stat: "path={{ fabricroot }}/bin/{{ item }}"
  with_items:
    - kubelet
    - kubectl
    - kube-proxy
  register: k8s_binaries

- name: Pull k8s binaries from the master
  command: >-
    scp -i "/opt/gopath/id_rsa" -o "StrictHostKeyChecking no" "{{ cluster.
    ssh_user }}@{{ private_ip }}:{{ fabricroot }}/bin/{{ item.item }}"
    "{{ fabricroot }}/bin/{{ item.item }}"
  with_items: " {{ k8s_binaries.results }} "
  when: item.stat.exists == false
  no_log: True

- name: Setup services for worker node
  template:
    src: "{{ playbook_dir }}/../env_k8s/worker/templates/k8s.service.j2"
    dest: "{{ service_path }}{{ item }}.service"
    mode: 0644
  with_items:
    - kubelet
    - kube-proxy

- name: Copy kubeconfig for each node
  copy:
    src: "{{ playbook_dir }}/../../vars/kubeconfig"
    dest: "{{ item }}"
    mode: 0600
  with_items:
    - ~/.kube/config
    - /etc/kubernetes/kubeconfig

- name: Check kubelet version
  command: "{{ fabricroot }}/bin/kubelet --version"
  register: kubeversion

- name: Setup worker node service variables
  set_fact:
    kubelet_params: >-
      --cloud-provider=''
      --kubeconfig=/etc/kubernetes/kubeconfig
      --require-kubeconfig
      --container-runtime=docker
      --cluster-dns={{ cluster.dns_service_ip }}
      --cluster-domain={{ cluster.domain }}
      --allow-privileged=true
      --resolv-conf=''
      --fail-swap-on=false
    proxy_params: >-
      --master={{ private_ip }}:8080
      --cluster-cidr={{ cluster.container_network.Network }}

- name: Setup worker node service variables
  set_fact:
    kubelet_params: "{{ kubelet_params }} --fail-swap-on=false"
  when: kubeversion.stdout | search('v1.8.')

- name: Configure the worker node services
  template:
    src: "{{ playbook_dir }}/../env_k8s/worker/templates/k8s.conf.j2"
    dest: "/etc/kubernetes/{{ item.name }}"
    mode: 0644
  with_items:
    - { name: "kubelet", value: "{{ kubelet_params }}" }
    - { name: "kube-proxy", value: "{{ proxy_params }}" }

- name: Reload daemon service
  command: systemctl daemon-reload

- name: Start the worker services
  service:
    name: "{{ item }}"
    enabled: yes
    state: restarted
  with_items:
    - kubelet
    - kube-proxy
