---
- name: Setup variables
  set_fact:
    etcd_cluster: ""
    node_ip: "{{ hostvars[inventory_hostname].private_ip }}"
    node_name: "{{ hostvars[inventory_hostname].inter_name }}"
    domain: "{{ cluster.domain | default('fabric') }}"

- name: Get etcd ip address
  set_fact:
    etcd_ip: "{{ hostvars[groups['etcdnodes'][0]].private_ip }}"
  when: groups['etcdnodes'][0] is defined

- name: Reset etcd
  uri:
    url: "http://{{ etcd_ip }}:2379/v2/keys/skydns?recursive=true"
    method: DELETE
    status_code: 200,202,204,404
  when: inventory_hostname == groups['allnodes'][0]

- name: Initialize skydns configuration in etcd
  uri:
    url: http://{{ etcd_ip }}:2379/v2/keys/skydns/config
    method: PUT
    body: value={"ttl":3600,"domain":"{{ domain }}."}
    status_code: 200,201
  when: inventory_hostname == groups['allnodes'][0]

- name: Create etcd cluster endpoint parameter
  set_fact:
    etcd_cluster: "{{ etcd_cluster }} http://{{ hostvars[item].private_ip }}:2379"
  with_items: "{{ groups['etcdnodes'] }}"

- name: Make the endpoint the right format
  set_fact:
    etcd_cluster: "{{ etcd_cluster | trim | replace(' ', ',') }}"

- name: Check if there are existing skydns containers
  command: docker ps -a -f name=skydns.{{ node_name }}
  register: hasContainer

- name: Remove the existing skydns and registrator containers
  command: docker rm -f skydns.{{ node_name }} registrator.{{ node_name }}
  when: hasContainer.stdout_lines | length > 1

- name: Get nameservers
  shell: grep -v "^#" /etc/resolv.conf|grep nameserver|awk '{print $2 ":53"}'
  register: nameservers

# only have skydns container running on the first node
- name: Start skydns service
  command: >-
    docker run -d --name skydns.{{ node_name }} --net=host -p 53:53/udp
    skynetservices/skydns:2.5.3a -machines {{ etcd_cluster }}
    -nameservers {{ nameservers.stdout_lines | join(',') }}
    -addr {{ node_ip }}:53 -local {{ node_name }}.{{ domain }}
  when: node_ip == hostvars[groups['allnodes'][0]].private_ip

- name: Start registrator service
  command: >-
    docker run -d --name registrator.{{ node_name }}
    -v /var/run/docker.sock:/tmp/docker.sock
    email4tong/registrator:v10 -internal -ttl 30 -ttl-refresh 20
    -resync 18
    skydns2://{{ hostvars[groups['etcdnodes'] | random].private_ip }}:2379/{{ domain }}